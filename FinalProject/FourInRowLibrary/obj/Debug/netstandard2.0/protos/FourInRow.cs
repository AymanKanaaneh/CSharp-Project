// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/FourInRow.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcFIRService {

  /// <summary>Holder for reflection information generated from protos/FourInRow.proto</summary>
  public static partial class FourInRowReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/FourInRow.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FourInRowReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZwcm90b3MvRm91ckluUm93LnByb3RvEglmb3VySW5Sb3cigAEKCVVzZXJN",
            "b2RlbBIQCgh1c2VyTmFtZRgBIAEoCRIWCg5oYXNoZWRQYXNzd29yZBgCIAEo",
            "CRISCgpudW1PZkdhbWVzGAMgASgFEhEKCW51bU9GV2lucxgEIAEoBRISCgpu",
            "dW1PZkxvc2VzGAUgASgFEg4KBnBvaW50cxgGIAEoBSI1ChFQb2ludHNVcGRh",
            "dGVNb2RlbBIOCgZwb2ludHMYASABKAUSEAoIdXNlcm5hbWUYAiABKAkiVgoK",
            "VXNlcnNNb2RlbBIjCgV1c2VyMRgBIAEoCzIULmZvdXJJblJvdy5Vc2VyTW9k",
            "ZWwSIwoFdXNlcjIYAiABKAsyFC5mb3VySW5Sb3cuVXNlck1vZGVsIhoKCk5h",
            "bWVTdHJpbmcSDAoEbmFtZRgBIAEoCSIkCgxTZXJpYWxOdW1iZXISFAoMc2Vy",
            "aWFsbnVtYmVyGAEgASgFIsgBCglHYW1lTW9kZWwSEwoLZmlyc3RQbGF5ZXIY",
            "ASABKAkSFAoMc2Vjb25kUGxheWVyGAIgASgJEg4KBldpbm5lchgDIAEoCRIU",
            "CgxzdGFydGluZ1RpbWUYBCABKAkSFAoMc2VyaWFsbnVtYmVyGAUgASgFEgwK",
            "BGRyYXcYBiABKAgSDwoHb25nb2luZxgHIAEoCBIZChFmaXJzdHBsYXllcnBv",
            "aW50cxgIIAEoBRIaChJzZWNvbmRQbGF5ZXJwb2ludHMYCSABKAUiMgoGVXNl",
            "cklkEhAKCHVzZXJOYW1lGAEgASgJEhYKDkhhc2hlZFBhc3N3b3JkGAIgASgJ",
            "Ih0KC2Jvb2xtZXNzYWdlEg4KBmlzdHJ1ZRgBIAEoCCIqCghVc2VyR2FtZRIQ",
            "Cgh1c2VyTmFtZRgBIAEoCRIMCgR0dXJuGAIgASgIIgcKBUVtcHR5IhoKBVVz",
            "ZXJzEhEKCXVzZXJOYW1lcxgBIAMoCSJmCgtDaGF0TWVzc2FnZRIkCgR0eXBl",
            "GAEgASgOMhYuZm91ckluUm93Lk1lc3NhZ2VUeXBlEhAKCGZyb21Vc2VyGAIg",
            "ASgJEg4KBnRvVXNlchgDIAEoCRIPCgdtZXNzYWdlGAQgASgJIkUKC0dhbWVN",
            "ZXNzYWdlEgwKBHR1cm4YASABKAgSKAoIY01lc3NhZ2UYAiABKAsyFi5mb3Vy",
            "SW5Sb3cuQ2hhdE1lc3NhZ2UiMAoJR2FtZXNMaXN0EiMKBWdhbWVzGAEgAygL",
            "MhQuZm91ckluUm93LkdhbWVNb2RlbCIhCg1TaG93VXNlcnNMaXN0EhAKCHVz",
            "ZXJzaG93GAEgAygJIiEKDVNob3dHYW1lc0xpc3QSEAoIZ2FtZXNob3cYASAD",
            "KAkiVQoMU2hvdzJwbGF5ZXJzEhAKCGdhbWVzaG93GAEgAygJEhMKC2dhbWVz",
            "bnVtYmVyGAIgASgFEg4KBnAxd2lucxgDIAEoBRIOCgZwMndpbnMYBCABKAUq",
            "QAoLTWVzc2FnZVR5cGUSCwoHTUVTU0FHRRAAEgoKBlVQREFURRABEgwKCEFQ",
            "UFJPVkVEEAISCgoGUkVKRUNUEAMy1g0KCUZvdXJJblJvdxI5CgdDb25uZWN0",
            "EhQuZm91ckluUm93LlVzZXJNb2RlbBoWLmZvdXJJblJvdy5DaGF0TWVzc2Fn",
            "ZTABEjQKCkRpc2Nvbm5lY3QSFC5mb3VySW5Sb3cuVXNlck1vZGVsGhAuZm91",
            "ckluUm93LkVtcHR5EjQKCkluc2VydFVzZXISFC5mb3VySW5Sb3cuVXNlck1v",
            "ZGVsGhAuZm91ckluUm93LkVtcHR5EjQKCkluc2VydEdhbWUSFC5mb3VySW5S",
            "b3cuR2FtZU1vZGVsGhAuZm91ckluUm93LkVtcHR5EjkKC0dldFVzZXJCeUlk",
            "EhQuZm91ckluUm93LlVzZXJNb2RlbBoULmZvdXJJblJvdy5Vc2VyTW9kZWwS",
            "QAoRR2V0VXNlckJ5VXNlck5hbWUSFS5mb3VySW5Sb3cuTmFtZVN0cmluZxoU",
            "LmZvdXJJblJvdy5Vc2VyTW9kZWwSNAoKVXNlckV4aXN0cxIULmZvdXJJblJv",
            "dy5Vc2VyTW9kZWwaEC5mb3VySW5Sb3cuRW1wdHkSMQoLVXBkYXRlVXNlcnMS",
            "EC5mb3VySW5Sb3cuRW1wdHkaEC5mb3VySW5Sb3cuVXNlcnMSNwoLU2VuZE1l",
            "c3NhZ2USFi5mb3VySW5Sb3cuQ2hhdE1lc3NhZ2UaEC5mb3VySW5Sb3cuRW1w",
            "dHkSRAoQUGVlcjJwZWVyQ29ubmVjdBIWLmZvdXJJblJvdy5HYW1lTWVzc2Fn",
            "ZRoWLmZvdXJJblJvdy5HYW1lTWVzc2FnZTABEjsKD1NlbmRHYW1lTWVzc2Fn",
            "ZRIWLmZvdXJJblJvdy5HYW1lTWVzc2FnZRoQLmZvdXJJblJvdy5FbXB0eRI5",
            "CgtHZXRBbGxVc2VycxIQLmZvdXJJblJvdy5FbXB0eRoYLmZvdXJJblJvdy5T",
            "aG93VXNlcnNMaXN0EjwKDkdldFNob3dlZFVzZXJzEhAuZm91ckluUm93LkVt",
            "cHR5GhguZm91ckluUm93LlNob3dVc2Vyc0xpc3QSQwoVR2V0U2hvd2VkUGVy",
            "Y2VudFVzZXJzEhAuZm91ckluUm93LkVtcHR5GhguZm91ckluUm93LlNob3dV",
            "c2Vyc0xpc3QSPAoOR2V0U2hvd2VkR2FtZXMSEC5mb3VySW5Sb3cuRW1wdHka",
            "GC5mb3VySW5Sb3cuU2hvd0dhbWVzTGlzdBJNChtHZXRTaG93ZWRHYW1lc0Jl",
            "dHdlZW4yVXNlcnMSFS5mb3VySW5Sb3cuVXNlcnNNb2RlbBoXLmZvdXJJblJv",
            "dy5TaG93MnBsYXllcnMSQwoVR2V0U2hvd2VkT25nb2luZ0dhbWVzEhAuZm91",
            "ckluUm93LkVtcHR5GhguZm91ckluUm93LlNob3dHYW1lc0xpc3QSQAoTR2V0",
            "TmV4dFNlcmlhbE51bWJlchIQLmZvdXJJblJvdy5FbXB0eRoXLmZvdXJJblJv",
            "dy5TZXJpYWxOdW1iZXISRAoRQ2hlY2tTZXJpYWxOdW1iZXISFy5mb3VySW5S",
            "b3cuU2VyaWFsTnVtYmVyGhYuZm91ckluUm93LmJvb2xtZXNzYWdlEjcKDVVw",
            "ZGF0ZUVuZEdhbWUSFC5mb3VySW5Sb3cuR2FtZU1vZGVsGhAuZm91ckluUm93",
            "LkVtcHR5EkYKFUdldEdhbWVCeVNlcmlhbE51bWJlchIXLmZvdXJJblJvdy5T",
            "ZXJpYWxOdW1iZXIaFC5mb3VySW5Sb3cuR2FtZU1vZGVsEkwKGUNoZWNrSWZB",
            "bHJlYWR5VXBkYXRlZEdhbWUSFy5mb3VySW5Sb3cuU2VyaWFsTnVtYmVyGhYu",
            "Zm91ckluUm93LmJvb2xtZXNzYWdlEjQKClVwZGF0ZVVzZXISFC5mb3VySW5S",
            "b3cuVXNlck1vZGVsGhAuZm91ckluUm93LkVtcHR5EjsKEUluc2VydFVzZXIy",
            "UGxheWVkEhQuZm91ckluUm93LlVzZXJNb2RlbBoQLmZvdXJJblJvdy5FbXB0",
            "eRJCChJDaGVja1VzZXJ0SW5QbGF5ZWQSFC5mb3VySW5Sb3cuVXNlck1vZGVs",
            "GhYuZm91ckluUm93LmJvb2xtZXNzYWdlEjsKEVJlbW92ZVVzZXJGUGxheWVk",
            "EhQuZm91ckluUm93LlVzZXJNb2RlbBoQLmZvdXJJblJvdy5FbXB0eRI2ChBz",
            "ZXJ2ZXJSZW1vdmVVc2VyEhAuZm91ckluUm93LlVzZXJzGhAuZm91ckluUm93",
            "LkVtcHR5EjcKDXNlcnZlckFkZFVzZXISFC5mb3VySW5Sb3cuVXNlck1vZGVs",
            "GhAuZm91ckluUm93LkVtcHR5QhGqAg5HcnBjRklSU2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GrpcFIRService.MessageType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.UserModel), global::GrpcFIRService.UserModel.Parser, new[]{ "UserName", "HashedPassword", "NumOfGames", "NumOFWins", "NumOfLoses", "Points" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.PointsUpdateModel), global::GrpcFIRService.PointsUpdateModel.Parser, new[]{ "Points", "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.UsersModel), global::GrpcFIRService.UsersModel.Parser, new[]{ "User1", "User2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.NameString), global::GrpcFIRService.NameString.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.SerialNumber), global::GrpcFIRService.SerialNumber.Parser, new[]{ "Serialnumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.GameModel), global::GrpcFIRService.GameModel.Parser, new[]{ "FirstPlayer", "SecondPlayer", "Winner", "StartingTime", "Serialnumber", "Draw", "Ongoing", "Firstplayerpoints", "SecondPlayerpoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.UserId), global::GrpcFIRService.UserId.Parser, new[]{ "UserName", "HashedPassword" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.boolmessage), global::GrpcFIRService.boolmessage.Parser, new[]{ "Istrue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.UserGame), global::GrpcFIRService.UserGame.Parser, new[]{ "UserName", "Turn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.Empty), global::GrpcFIRService.Empty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.Users), global::GrpcFIRService.Users.Parser, new[]{ "UserNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.ChatMessage), global::GrpcFIRService.ChatMessage.Parser, new[]{ "Type", "FromUser", "ToUser", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.GameMessage), global::GrpcFIRService.GameMessage.Parser, new[]{ "Turn", "CMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.GamesList), global::GrpcFIRService.GamesList.Parser, new[]{ "Games" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.ShowUsersList), global::GrpcFIRService.ShowUsersList.Parser, new[]{ "Usershow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.ShowGamesList), global::GrpcFIRService.ShowGamesList.Parser, new[]{ "Gameshow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcFIRService.Show2players), global::GrpcFIRService.Show2players.Parser, new[]{ "Gameshow", "Gamesnumber", "P1Wins", "P2Wins" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("MESSAGE")] Message = 0,
    [pbr::OriginalName("UPDATE")] Update = 1,
    [pbr::OriginalName("APPROVED")] Approved = 2,
    [pbr::OriginalName("REJECT")] Reject = 3,
  }

  #endregion

  #region Messages
  public sealed partial class UserModel : pb::IMessage<UserModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserModel> _parser = new pb::MessageParser<UserModel>(() => new UserModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModel(UserModel other) : this() {
      userName_ = other.userName_;
      hashedPassword_ = other.hashedPassword_;
      numOfGames_ = other.numOfGames_;
      numOFWins_ = other.numOFWins_;
      numOfLoses_ = other.numOfLoses_;
      points_ = other.points_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserModel Clone() {
      return new UserModel(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hashedPassword" field.</summary>
    public const int HashedPasswordFieldNumber = 2;
    private string hashedPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedPassword {
      get { return hashedPassword_; }
      set {
        hashedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numOfGames" field.</summary>
    public const int NumOfGamesFieldNumber = 3;
    private int numOfGames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumOfGames {
      get { return numOfGames_; }
      set {
        numOfGames_ = value;
      }
    }

    /// <summary>Field number for the "numOFWins" field.</summary>
    public const int NumOFWinsFieldNumber = 4;
    private int numOFWins_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumOFWins {
      get { return numOFWins_; }
      set {
        numOFWins_ = value;
      }
    }

    /// <summary>Field number for the "numOfLoses" field.</summary>
    public const int NumOfLosesFieldNumber = 5;
    private int numOfLoses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumOfLoses {
      get { return numOfLoses_; }
      set {
        numOfLoses_ = value;
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 6;
    private int points_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (HashedPassword != other.HashedPassword) return false;
      if (NumOfGames != other.NumOfGames) return false;
      if (NumOFWins != other.NumOFWins) return false;
      if (NumOfLoses != other.NumOfLoses) return false;
      if (Points != other.Points) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (HashedPassword.Length != 0) hash ^= HashedPassword.GetHashCode();
      if (NumOfGames != 0) hash ^= NumOfGames.GetHashCode();
      if (NumOFWins != 0) hash ^= NumOFWins.GetHashCode();
      if (NumOfLoses != 0) hash ^= NumOfLoses.GetHashCode();
      if (Points != 0) hash ^= Points.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HashedPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashedPassword);
      }
      if (NumOfGames != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumOfGames);
      }
      if (NumOFWins != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumOFWins);
      }
      if (NumOfLoses != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NumOfLoses);
      }
      if (Points != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Points);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HashedPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashedPassword);
      }
      if (NumOfGames != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumOfGames);
      }
      if (NumOFWins != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumOFWins);
      }
      if (NumOfLoses != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NumOfLoses);
      }
      if (Points != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Points);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HashedPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashedPassword);
      }
      if (NumOfGames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumOfGames);
      }
      if (NumOFWins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumOFWins);
      }
      if (NumOfLoses != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumOfLoses);
      }
      if (Points != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Points);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserModel other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.HashedPassword.Length != 0) {
        HashedPassword = other.HashedPassword;
      }
      if (other.NumOfGames != 0) {
        NumOfGames = other.NumOfGames;
      }
      if (other.NumOFWins != 0) {
        NumOFWins = other.NumOFWins;
      }
      if (other.NumOfLoses != 0) {
        NumOfLoses = other.NumOfLoses;
      }
      if (other.Points != 0) {
        Points = other.Points;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            HashedPassword = input.ReadString();
            break;
          }
          case 24: {
            NumOfGames = input.ReadInt32();
            break;
          }
          case 32: {
            NumOFWins = input.ReadInt32();
            break;
          }
          case 40: {
            NumOfLoses = input.ReadInt32();
            break;
          }
          case 48: {
            Points = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            HashedPassword = input.ReadString();
            break;
          }
          case 24: {
            NumOfGames = input.ReadInt32();
            break;
          }
          case 32: {
            NumOFWins = input.ReadInt32();
            break;
          }
          case 40: {
            NumOfLoses = input.ReadInt32();
            break;
          }
          case 48: {
            Points = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PointsUpdateModel : pb::IMessage<PointsUpdateModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PointsUpdateModel> _parser = new pb::MessageParser<PointsUpdateModel>(() => new PointsUpdateModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PointsUpdateModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsUpdateModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsUpdateModel(PointsUpdateModel other) : this() {
      points_ = other.points_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsUpdateModel Clone() {
      return new PointsUpdateModel(this);
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 1;
    private int points_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PointsUpdateModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PointsUpdateModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Points != other.Points) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Points != 0) hash ^= Points.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Points != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Points);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Points != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Points);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Points != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Points);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PointsUpdateModel other) {
      if (other == null) {
        return;
      }
      if (other.Points != 0) {
        Points = other.Points;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Points = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Points = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UsersModel : pb::IMessage<UsersModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UsersModel> _parser = new pb::MessageParser<UsersModel>(() => new UsersModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsersModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersModel(UsersModel other) : this() {
      user1_ = other.user1_ != null ? other.user1_.Clone() : null;
      user2_ = other.user2_ != null ? other.user2_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersModel Clone() {
      return new UsersModel(this);
    }

    /// <summary>Field number for the "user1" field.</summary>
    public const int User1FieldNumber = 1;
    private global::GrpcFIRService.UserModel user1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcFIRService.UserModel User1 {
      get { return user1_; }
      set {
        user1_ = value;
      }
    }

    /// <summary>Field number for the "user2" field.</summary>
    public const int User2FieldNumber = 2;
    private global::GrpcFIRService.UserModel user2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcFIRService.UserModel User2 {
      get { return user2_; }
      set {
        user2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsersModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsersModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User1, other.User1)) return false;
      if (!object.Equals(User2, other.User2)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user1_ != null) hash ^= User1.GetHashCode();
      if (user2_ != null) hash ^= User2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user1_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User1);
      }
      if (user2_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user1_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User1);
      }
      if (user2_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User1);
      }
      if (user2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsersModel other) {
      if (other == null) {
        return;
      }
      if (other.user1_ != null) {
        if (user1_ == null) {
          User1 = new global::GrpcFIRService.UserModel();
        }
        User1.MergeFrom(other.User1);
      }
      if (other.user2_ != null) {
        if (user2_ == null) {
          User2 = new global::GrpcFIRService.UserModel();
        }
        User2.MergeFrom(other.User2);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user1_ == null) {
              User1 = new global::GrpcFIRService.UserModel();
            }
            input.ReadMessage(User1);
            break;
          }
          case 18: {
            if (user2_ == null) {
              User2 = new global::GrpcFIRService.UserModel();
            }
            input.ReadMessage(User2);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user1_ == null) {
              User1 = new global::GrpcFIRService.UserModel();
            }
            input.ReadMessage(User1);
            break;
          }
          case 18: {
            if (user2_ == null) {
              User2 = new global::GrpcFIRService.UserModel();
            }
            input.ReadMessage(User2);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NameString : pb::IMessage<NameString>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NameString> _parser = new pb::MessageParser<NameString>(() => new NameString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NameString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameString(NameString other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NameString Clone() {
      return new NameString(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NameString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NameString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NameString other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SerialNumber : pb::IMessage<SerialNumber>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SerialNumber> _parser = new pb::MessageParser<SerialNumber>(() => new SerialNumber());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerialNumber> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerialNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerialNumber(SerialNumber other) : this() {
      serialnumber_ = other.serialnumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerialNumber Clone() {
      return new SerialNumber(this);
    }

    /// <summary>Field number for the "serialnumber" field.</summary>
    public const int SerialnumberFieldNumber = 1;
    private int serialnumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Serialnumber {
      get { return serialnumber_; }
      set {
        serialnumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerialNumber);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerialNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Serialnumber != other.Serialnumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Serialnumber != 0) hash ^= Serialnumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Serialnumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Serialnumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Serialnumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Serialnumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Serialnumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Serialnumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerialNumber other) {
      if (other == null) {
        return;
      }
      if (other.Serialnumber != 0) {
        Serialnumber = other.Serialnumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Serialnumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Serialnumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameModel : pb::IMessage<GameModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameModel> _parser = new pb::MessageParser<GameModel>(() => new GameModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameModel(GameModel other) : this() {
      firstPlayer_ = other.firstPlayer_;
      secondPlayer_ = other.secondPlayer_;
      winner_ = other.winner_;
      startingTime_ = other.startingTime_;
      serialnumber_ = other.serialnumber_;
      draw_ = other.draw_;
      ongoing_ = other.ongoing_;
      firstplayerpoints_ = other.firstplayerpoints_;
      secondPlayerpoints_ = other.secondPlayerpoints_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameModel Clone() {
      return new GameModel(this);
    }

    /// <summary>Field number for the "firstPlayer" field.</summary>
    public const int FirstPlayerFieldNumber = 1;
    private string firstPlayer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstPlayer {
      get { return firstPlayer_; }
      set {
        firstPlayer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secondPlayer" field.</summary>
    public const int SecondPlayerFieldNumber = 2;
    private string secondPlayer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecondPlayer {
      get { return secondPlayer_; }
      set {
        secondPlayer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Winner" field.</summary>
    public const int WinnerFieldNumber = 3;
    private string winner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Winner {
      get { return winner_; }
      set {
        winner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startingTime" field.</summary>
    public const int StartingTimeFieldNumber = 4;
    private string startingTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartingTime {
      get { return startingTime_; }
      set {
        startingTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serialnumber" field.</summary>
    public const int SerialnumberFieldNumber = 5;
    private int serialnumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Serialnumber {
      get { return serialnumber_; }
      set {
        serialnumber_ = value;
      }
    }

    /// <summary>Field number for the "draw" field.</summary>
    public const int DrawFieldNumber = 6;
    private bool draw_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Draw {
      get { return draw_; }
      set {
        draw_ = value;
      }
    }

    /// <summary>Field number for the "ongoing" field.</summary>
    public const int OngoingFieldNumber = 7;
    private bool ongoing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ongoing {
      get { return ongoing_; }
      set {
        ongoing_ = value;
      }
    }

    /// <summary>Field number for the "firstplayerpoints" field.</summary>
    public const int FirstplayerpointsFieldNumber = 8;
    private int firstplayerpoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Firstplayerpoints {
      get { return firstplayerpoints_; }
      set {
        firstplayerpoints_ = value;
      }
    }

    /// <summary>Field number for the "secondPlayerpoints" field.</summary>
    public const int SecondPlayerpointsFieldNumber = 9;
    private int secondPlayerpoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SecondPlayerpoints {
      get { return secondPlayerpoints_; }
      set {
        secondPlayerpoints_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstPlayer != other.FirstPlayer) return false;
      if (SecondPlayer != other.SecondPlayer) return false;
      if (Winner != other.Winner) return false;
      if (StartingTime != other.StartingTime) return false;
      if (Serialnumber != other.Serialnumber) return false;
      if (Draw != other.Draw) return false;
      if (Ongoing != other.Ongoing) return false;
      if (Firstplayerpoints != other.Firstplayerpoints) return false;
      if (SecondPlayerpoints != other.SecondPlayerpoints) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstPlayer.Length != 0) hash ^= FirstPlayer.GetHashCode();
      if (SecondPlayer.Length != 0) hash ^= SecondPlayer.GetHashCode();
      if (Winner.Length != 0) hash ^= Winner.GetHashCode();
      if (StartingTime.Length != 0) hash ^= StartingTime.GetHashCode();
      if (Serialnumber != 0) hash ^= Serialnumber.GetHashCode();
      if (Draw != false) hash ^= Draw.GetHashCode();
      if (Ongoing != false) hash ^= Ongoing.GetHashCode();
      if (Firstplayerpoints != 0) hash ^= Firstplayerpoints.GetHashCode();
      if (SecondPlayerpoints != 0) hash ^= SecondPlayerpoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FirstPlayer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstPlayer);
      }
      if (SecondPlayer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecondPlayer);
      }
      if (Winner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Winner);
      }
      if (StartingTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StartingTime);
      }
      if (Serialnumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Serialnumber);
      }
      if (Draw != false) {
        output.WriteRawTag(48);
        output.WriteBool(Draw);
      }
      if (Ongoing != false) {
        output.WriteRawTag(56);
        output.WriteBool(Ongoing);
      }
      if (Firstplayerpoints != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Firstplayerpoints);
      }
      if (SecondPlayerpoints != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SecondPlayerpoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FirstPlayer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstPlayer);
      }
      if (SecondPlayer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecondPlayer);
      }
      if (Winner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Winner);
      }
      if (StartingTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StartingTime);
      }
      if (Serialnumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Serialnumber);
      }
      if (Draw != false) {
        output.WriteRawTag(48);
        output.WriteBool(Draw);
      }
      if (Ongoing != false) {
        output.WriteRawTag(56);
        output.WriteBool(Ongoing);
      }
      if (Firstplayerpoints != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Firstplayerpoints);
      }
      if (SecondPlayerpoints != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SecondPlayerpoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstPlayer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstPlayer);
      }
      if (SecondPlayer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecondPlayer);
      }
      if (Winner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Winner);
      }
      if (StartingTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartingTime);
      }
      if (Serialnumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Serialnumber);
      }
      if (Draw != false) {
        size += 1 + 1;
      }
      if (Ongoing != false) {
        size += 1 + 1;
      }
      if (Firstplayerpoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Firstplayerpoints);
      }
      if (SecondPlayerpoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondPlayerpoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameModel other) {
      if (other == null) {
        return;
      }
      if (other.FirstPlayer.Length != 0) {
        FirstPlayer = other.FirstPlayer;
      }
      if (other.SecondPlayer.Length != 0) {
        SecondPlayer = other.SecondPlayer;
      }
      if (other.Winner.Length != 0) {
        Winner = other.Winner;
      }
      if (other.StartingTime.Length != 0) {
        StartingTime = other.StartingTime;
      }
      if (other.Serialnumber != 0) {
        Serialnumber = other.Serialnumber;
      }
      if (other.Draw != false) {
        Draw = other.Draw;
      }
      if (other.Ongoing != false) {
        Ongoing = other.Ongoing;
      }
      if (other.Firstplayerpoints != 0) {
        Firstplayerpoints = other.Firstplayerpoints;
      }
      if (other.SecondPlayerpoints != 0) {
        SecondPlayerpoints = other.SecondPlayerpoints;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstPlayer = input.ReadString();
            break;
          }
          case 18: {
            SecondPlayer = input.ReadString();
            break;
          }
          case 26: {
            Winner = input.ReadString();
            break;
          }
          case 34: {
            StartingTime = input.ReadString();
            break;
          }
          case 40: {
            Serialnumber = input.ReadInt32();
            break;
          }
          case 48: {
            Draw = input.ReadBool();
            break;
          }
          case 56: {
            Ongoing = input.ReadBool();
            break;
          }
          case 64: {
            Firstplayerpoints = input.ReadInt32();
            break;
          }
          case 72: {
            SecondPlayerpoints = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FirstPlayer = input.ReadString();
            break;
          }
          case 18: {
            SecondPlayer = input.ReadString();
            break;
          }
          case 26: {
            Winner = input.ReadString();
            break;
          }
          case 34: {
            StartingTime = input.ReadString();
            break;
          }
          case 40: {
            Serialnumber = input.ReadInt32();
            break;
          }
          case 48: {
            Draw = input.ReadBool();
            break;
          }
          case 56: {
            Ongoing = input.ReadBool();
            break;
          }
          case 64: {
            Firstplayerpoints = input.ReadInt32();
            break;
          }
          case 72: {
            SecondPlayerpoints = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserId : pb::IMessage<UserId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserId> _parser = new pb::MessageParser<UserId>(() => new UserId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserId(UserId other) : this() {
      userName_ = other.userName_;
      hashedPassword_ = other.hashedPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserId Clone() {
      return new UserId(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HashedPassword" field.</summary>
    public const int HashedPasswordFieldNumber = 2;
    private string hashedPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedPassword {
      get { return hashedPassword_; }
      set {
        hashedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (HashedPassword != other.HashedPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (HashedPassword.Length != 0) hash ^= HashedPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HashedPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashedPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HashedPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashedPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HashedPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashedPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserId other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.HashedPassword.Length != 0) {
        HashedPassword = other.HashedPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            HashedPassword = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            HashedPassword = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class boolmessage : pb::IMessage<boolmessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<boolmessage> _parser = new pb::MessageParser<boolmessage>(() => new boolmessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<boolmessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public boolmessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public boolmessage(boolmessage other) : this() {
      istrue_ = other.istrue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public boolmessage Clone() {
      return new boolmessage(this);
    }

    /// <summary>Field number for the "istrue" field.</summary>
    public const int IstrueFieldNumber = 1;
    private bool istrue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Istrue {
      get { return istrue_; }
      set {
        istrue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as boolmessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(boolmessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Istrue != other.Istrue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Istrue != false) hash ^= Istrue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Istrue != false) {
        output.WriteRawTag(8);
        output.WriteBool(Istrue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Istrue != false) {
        output.WriteRawTag(8);
        output.WriteBool(Istrue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Istrue != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(boolmessage other) {
      if (other == null) {
        return;
      }
      if (other.Istrue != false) {
        Istrue = other.Istrue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Istrue = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Istrue = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserGame : pb::IMessage<UserGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGame> _parser = new pb::MessageParser<UserGame>(() => new UserGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGame(UserGame other) : this() {
      userName_ = other.userName_;
      turn_ = other.turn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGame Clone() {
      return new UserGame(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "turn" field.</summary>
    public const int TurnFieldNumber = 2;
    private bool turn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Turn {
      get { return turn_; }
      set {
        turn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Turn != other.Turn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Turn != false) hash ^= Turn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Turn != false) {
        output.WriteRawTag(16);
        output.WriteBool(Turn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Turn != false) {
        output.WriteRawTag(16);
        output.WriteBool(Turn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Turn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGame other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Turn != false) {
        Turn = other.Turn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 16: {
            Turn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 16: {
            Turn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// empty type
  /// </summary>
  public sealed partial class Empty : pb::IMessage<Empty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Users : pb::IMessage<Users>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Users> _parser = new pb::MessageParser<Users>(() => new Users());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Users> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Users() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Users(Users other) : this() {
      userNames_ = other.userNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Users Clone() {
      return new Users(this);
    }

    /// <summary>Field number for the "userNames" field.</summary>
    public const int UserNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_userNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> userNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserNames {
      get { return userNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Users);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Users other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userNames_.Equals(other.userNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userNames_.WriteTo(output, _repeated_userNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userNames_.WriteTo(ref output, _repeated_userNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userNames_.CalculateSize(_repeated_userNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Users other) {
      if (other == null) {
        return;
      }
      userNames_.Add(other.userNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userNames_.AddEntriesFrom(input, _repeated_userNames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userNames_.AddEntriesFrom(ref input, _repeated_userNames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The chat message containing all data needed
  /// </summary>
  public sealed partial class ChatMessage : pb::IMessage<ChatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      type_ = other.type_;
      fromUser_ = other.fromUser_;
      toUser_ = other.toUser_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::GrpcFIRService.MessageType type_ = global::GrpcFIRService.MessageType.Message;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcFIRService.MessageType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "fromUser" field.</summary>
    public const int FromUserFieldNumber = 2;
    private string fromUser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUser {
      get { return fromUser_; }
      set {
        fromUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toUser" field.</summary>
    public const int ToUserFieldNumber = 3;
    private string toUser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToUser {
      get { return toUser_; }
      set {
        toUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (FromUser != other.FromUser) return false;
      if (ToUser != other.ToUser) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::GrpcFIRService.MessageType.Message) hash ^= Type.GetHashCode();
      if (FromUser.Length != 0) hash ^= FromUser.GetHashCode();
      if (ToUser.Length != 0) hash ^= ToUser.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::GrpcFIRService.MessageType.Message) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (FromUser.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromUser);
      }
      if (ToUser.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ToUser);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::GrpcFIRService.MessageType.Message) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (FromUser.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromUser);
      }
      if (ToUser.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ToUser);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::GrpcFIRService.MessageType.Message) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (FromUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUser);
      }
      if (ToUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUser);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::GrpcFIRService.MessageType.Message) {
        Type = other.Type;
      }
      if (other.FromUser.Length != 0) {
        FromUser = other.FromUser;
      }
      if (other.ToUser.Length != 0) {
        ToUser = other.ToUser;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::GrpcFIRService.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            FromUser = input.ReadString();
            break;
          }
          case 26: {
            ToUser = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::GrpcFIRService.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            FromUser = input.ReadString();
            break;
          }
          case 26: {
            ToUser = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameMessage : pb::IMessage<GameMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage(GameMessage other) : this() {
      turn_ = other.turn_;
      cMessage_ = other.cMessage_ != null ? other.cMessage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage Clone() {
      return new GameMessage(this);
    }

    /// <summary>Field number for the "turn" field.</summary>
    public const int TurnFieldNumber = 1;
    private bool turn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Turn {
      get { return turn_; }
      set {
        turn_ = value;
      }
    }

    /// <summary>Field number for the "cMessage" field.</summary>
    public const int CMessageFieldNumber = 2;
    private global::GrpcFIRService.ChatMessage cMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcFIRService.ChatMessage CMessage {
      get { return cMessage_; }
      set {
        cMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Turn != other.Turn) return false;
      if (!object.Equals(CMessage, other.CMessage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Turn != false) hash ^= Turn.GetHashCode();
      if (cMessage_ != null) hash ^= CMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Turn != false) {
        output.WriteRawTag(8);
        output.WriteBool(Turn);
      }
      if (cMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Turn != false) {
        output.WriteRawTag(8);
        output.WriteBool(Turn);
      }
      if (cMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Turn != false) {
        size += 1 + 1;
      }
      if (cMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMessage other) {
      if (other == null) {
        return;
      }
      if (other.Turn != false) {
        Turn = other.Turn;
      }
      if (other.cMessage_ != null) {
        if (cMessage_ == null) {
          CMessage = new global::GrpcFIRService.ChatMessage();
        }
        CMessage.MergeFrom(other.CMessage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Turn = input.ReadBool();
            break;
          }
          case 18: {
            if (cMessage_ == null) {
              CMessage = new global::GrpcFIRService.ChatMessage();
            }
            input.ReadMessage(CMessage);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Turn = input.ReadBool();
            break;
          }
          case 18: {
            if (cMessage_ == null) {
              CMessage = new global::GrpcFIRService.ChatMessage();
            }
            input.ReadMessage(CMessage);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GamesList : pb::IMessage<GamesList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GamesList> _parser = new pb::MessageParser<GamesList>(() => new GamesList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GamesList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamesList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamesList(GamesList other) : this() {
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamesList Clone() {
      return new GamesList(this);
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcFIRService.GameModel> _repeated_games_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcFIRService.GameModel.Parser);
    private readonly pbc::RepeatedField<global::GrpcFIRService.GameModel> games_ = new pbc::RepeatedField<global::GrpcFIRService.GameModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcFIRService.GameModel> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GamesList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GamesList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      games_.WriteTo(ref output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GamesList other) {
      if (other == null) {
        return;
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShowUsersList : pb::IMessage<ShowUsersList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShowUsersList> _parser = new pb::MessageParser<ShowUsersList>(() => new ShowUsersList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShowUsersList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowUsersList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowUsersList(ShowUsersList other) : this() {
      usershow_ = other.usershow_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowUsersList Clone() {
      return new ShowUsersList(this);
    }

    /// <summary>Field number for the "usershow" field.</summary>
    public const int UsershowFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_usershow_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> usershow_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Usershow {
      get { return usershow_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShowUsersList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShowUsersList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!usershow_.Equals(other.usershow_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= usershow_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      usershow_.WriteTo(output, _repeated_usershow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      usershow_.WriteTo(ref output, _repeated_usershow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += usershow_.CalculateSize(_repeated_usershow_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShowUsersList other) {
      if (other == null) {
        return;
      }
      usershow_.Add(other.usershow_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            usershow_.AddEntriesFrom(input, _repeated_usershow_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            usershow_.AddEntriesFrom(ref input, _repeated_usershow_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShowGamesList : pb::IMessage<ShowGamesList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShowGamesList> _parser = new pb::MessageParser<ShowGamesList>(() => new ShowGamesList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShowGamesList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowGamesList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowGamesList(ShowGamesList other) : this() {
      gameshow_ = other.gameshow_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowGamesList Clone() {
      return new ShowGamesList(this);
    }

    /// <summary>Field number for the "gameshow" field.</summary>
    public const int GameshowFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameshow_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameshow_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Gameshow {
      get { return gameshow_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShowGamesList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShowGamesList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameshow_.Equals(other.gameshow_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameshow_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameshow_.WriteTo(output, _repeated_gameshow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameshow_.WriteTo(ref output, _repeated_gameshow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gameshow_.CalculateSize(_repeated_gameshow_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShowGamesList other) {
      if (other == null) {
        return;
      }
      gameshow_.Add(other.gameshow_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameshow_.AddEntriesFrom(input, _repeated_gameshow_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameshow_.AddEntriesFrom(ref input, _repeated_gameshow_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Show2players : pb::IMessage<Show2players>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Show2players> _parser = new pb::MessageParser<Show2players>(() => new Show2players());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Show2players> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Show2players() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Show2players(Show2players other) : this() {
      gameshow_ = other.gameshow_.Clone();
      gamesnumber_ = other.gamesnumber_;
      p1Wins_ = other.p1Wins_;
      p2Wins_ = other.p2Wins_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Show2players Clone() {
      return new Show2players(this);
    }

    /// <summary>Field number for the "gameshow" field.</summary>
    public const int GameshowFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameshow_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameshow_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Gameshow {
      get { return gameshow_; }
    }

    /// <summary>Field number for the "gamesnumber" field.</summary>
    public const int GamesnumberFieldNumber = 2;
    private int gamesnumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gamesnumber {
      get { return gamesnumber_; }
      set {
        gamesnumber_ = value;
      }
    }

    /// <summary>Field number for the "p1wins" field.</summary>
    public const int P1WinsFieldNumber = 3;
    private int p1Wins_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int P1Wins {
      get { return p1Wins_; }
      set {
        p1Wins_ = value;
      }
    }

    /// <summary>Field number for the "p2wins" field.</summary>
    public const int P2WinsFieldNumber = 4;
    private int p2Wins_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int P2Wins {
      get { return p2Wins_; }
      set {
        p2Wins_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Show2players);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Show2players other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameshow_.Equals(other.gameshow_)) return false;
      if (Gamesnumber != other.Gamesnumber) return false;
      if (P1Wins != other.P1Wins) return false;
      if (P2Wins != other.P2Wins) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameshow_.GetHashCode();
      if (Gamesnumber != 0) hash ^= Gamesnumber.GetHashCode();
      if (P1Wins != 0) hash ^= P1Wins.GetHashCode();
      if (P2Wins != 0) hash ^= P2Wins.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameshow_.WriteTo(output, _repeated_gameshow_codec);
      if (Gamesnumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gamesnumber);
      }
      if (P1Wins != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(P1Wins);
      }
      if (P2Wins != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(P2Wins);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameshow_.WriteTo(ref output, _repeated_gameshow_codec);
      if (Gamesnumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gamesnumber);
      }
      if (P1Wins != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(P1Wins);
      }
      if (P2Wins != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(P2Wins);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gameshow_.CalculateSize(_repeated_gameshow_codec);
      if (Gamesnumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gamesnumber);
      }
      if (P1Wins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(P1Wins);
      }
      if (P2Wins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(P2Wins);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Show2players other) {
      if (other == null) {
        return;
      }
      gameshow_.Add(other.gameshow_);
      if (other.Gamesnumber != 0) {
        Gamesnumber = other.Gamesnumber;
      }
      if (other.P1Wins != 0) {
        P1Wins = other.P1Wins;
      }
      if (other.P2Wins != 0) {
        P2Wins = other.P2Wins;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameshow_.AddEntriesFrom(input, _repeated_gameshow_codec);
            break;
          }
          case 16: {
            Gamesnumber = input.ReadInt32();
            break;
          }
          case 24: {
            P1Wins = input.ReadInt32();
            break;
          }
          case 32: {
            P2Wins = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameshow_.AddEntriesFrom(ref input, _repeated_gameshow_codec);
            break;
          }
          case 16: {
            Gamesnumber = input.ReadInt32();
            break;
          }
          case 24: {
            P1Wins = input.ReadInt32();
            break;
          }
          case 32: {
            P2Wins = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
