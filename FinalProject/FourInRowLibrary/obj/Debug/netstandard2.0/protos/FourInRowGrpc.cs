// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/FourInRow.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcFIRService {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class FourInRow
  {
    static readonly string __ServiceName = "fourInRow.FourInRow";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::GrpcFIRService.UserModel> __Marshaller_fourInRow_UserModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.UserModel.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.ChatMessage> __Marshaller_fourInRow_ChatMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.ChatMessage.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.Empty> __Marshaller_fourInRow_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.Empty.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.GameModel> __Marshaller_fourInRow_GameModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.GameModel.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.NameString> __Marshaller_fourInRow_NameString = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.NameString.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.Users> __Marshaller_fourInRow_Users = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.Users.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.GameMessage> __Marshaller_fourInRow_GameMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.GameMessage.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.ShowUsersList> __Marshaller_fourInRow_ShowUsersList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.ShowUsersList.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.ShowGamesList> __Marshaller_fourInRow_ShowGamesList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.ShowGamesList.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.UsersModel> __Marshaller_fourInRow_UsersModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.UsersModel.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.Show2players> __Marshaller_fourInRow_Show2players = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.Show2players.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.SerialNumber> __Marshaller_fourInRow_SerialNumber = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.SerialNumber.Parser));
    static readonly grpc::Marshaller<global::GrpcFIRService.boolmessage> __Marshaller_fourInRow_boolmessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcFIRService.boolmessage.Parser));

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.ChatMessage> __Method_Connect = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.ChatMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Connect",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_ChatMessage);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_Disconnect = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Disconnect",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_InsertUser = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertUser",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.GameModel, global::GrpcFIRService.Empty> __Method_InsertGame = new grpc::Method<global::GrpcFIRService.GameModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertGame",
        __Marshaller_fourInRow_GameModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.UserModel> __Method_GetUserById = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.UserModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserById",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_UserModel);

    static readonly grpc::Method<global::GrpcFIRService.NameString, global::GrpcFIRService.UserModel> __Method_GetUserByUserName = new grpc::Method<global::GrpcFIRService.NameString, global::GrpcFIRService.UserModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserByUserName",
        __Marshaller_fourInRow_NameString,
        __Marshaller_fourInRow_UserModel);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_UserExists = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UserExists",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.Users> __Method_UpdateUsers = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.Users>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUsers",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_Users);

    static readonly grpc::Method<global::GrpcFIRService.ChatMessage, global::GrpcFIRService.Empty> __Method_SendMessage = new grpc::Method<global::GrpcFIRService.ChatMessage, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendMessage",
        __Marshaller_fourInRow_ChatMessage,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.GameMessage, global::GrpcFIRService.GameMessage> __Method_Peer2peerConnect = new grpc::Method<global::GrpcFIRService.GameMessage, global::GrpcFIRService.GameMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Peer2peerConnect",
        __Marshaller_fourInRow_GameMessage,
        __Marshaller_fourInRow_GameMessage);

    static readonly grpc::Method<global::GrpcFIRService.GameMessage, global::GrpcFIRService.Empty> __Method_SendGameMessage = new grpc::Method<global::GrpcFIRService.GameMessage, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendGameMessage",
        __Marshaller_fourInRow_GameMessage,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowUsersList> __Method_GetAllUsers = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowUsersList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUsers",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_ShowUsersList);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowUsersList> __Method_GetShowedUsers = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowUsersList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetShowedUsers",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_ShowUsersList);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowUsersList> __Method_GetShowedPercentUsers = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowUsersList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetShowedPercentUsers",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_ShowUsersList);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowGamesList> __Method_GetShowedGames = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowGamesList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetShowedGames",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_ShowGamesList);

    static readonly grpc::Method<global::GrpcFIRService.UsersModel, global::GrpcFIRService.Show2players> __Method_GetShowedGamesBetween2Users = new grpc::Method<global::GrpcFIRService.UsersModel, global::GrpcFIRService.Show2players>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetShowedGamesBetween2Users",
        __Marshaller_fourInRow_UsersModel,
        __Marshaller_fourInRow_Show2players);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowGamesList> __Method_GetShowedOngoingGames = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.ShowGamesList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetShowedOngoingGames",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_ShowGamesList);

    static readonly grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.SerialNumber> __Method_GetNextSerialNumber = new grpc::Method<global::GrpcFIRService.Empty, global::GrpcFIRService.SerialNumber>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNextSerialNumber",
        __Marshaller_fourInRow_Empty,
        __Marshaller_fourInRow_SerialNumber);

    static readonly grpc::Method<global::GrpcFIRService.SerialNumber, global::GrpcFIRService.boolmessage> __Method_CheckSerialNumber = new grpc::Method<global::GrpcFIRService.SerialNumber, global::GrpcFIRService.boolmessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckSerialNumber",
        __Marshaller_fourInRow_SerialNumber,
        __Marshaller_fourInRow_boolmessage);

    static readonly grpc::Method<global::GrpcFIRService.GameModel, global::GrpcFIRService.Empty> __Method_UpdateEndGame = new grpc::Method<global::GrpcFIRService.GameModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEndGame",
        __Marshaller_fourInRow_GameModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.SerialNumber, global::GrpcFIRService.GameModel> __Method_GetGameBySerialNumber = new grpc::Method<global::GrpcFIRService.SerialNumber, global::GrpcFIRService.GameModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGameBySerialNumber",
        __Marshaller_fourInRow_SerialNumber,
        __Marshaller_fourInRow_GameModel);

    static readonly grpc::Method<global::GrpcFIRService.SerialNumber, global::GrpcFIRService.boolmessage> __Method_CheckIfAlreadyUpdatedGame = new grpc::Method<global::GrpcFIRService.SerialNumber, global::GrpcFIRService.boolmessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckIfAlreadyUpdatedGame",
        __Marshaller_fourInRow_SerialNumber,
        __Marshaller_fourInRow_boolmessage);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_UpdateUser = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUser",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_InsertUser2Played = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertUser2Played",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.boolmessage> __Method_CheckUsertInPlayed = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.boolmessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckUsertInPlayed",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_boolmessage);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_RemoveUserFPlayed = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUserFPlayed",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.Users, global::GrpcFIRService.Empty> __Method_serverRemoveUser = new grpc::Method<global::GrpcFIRService.Users, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "serverRemoveUser",
        __Marshaller_fourInRow_Users,
        __Marshaller_fourInRow_Empty);

    static readonly grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty> __Method_serverAddUser = new grpc::Method<global::GrpcFIRService.UserModel, global::GrpcFIRService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "serverAddUser",
        __Marshaller_fourInRow_UserModel,
        __Marshaller_fourInRow_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcFIRService.FourInRowReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for FourInRow</summary>
    public partial class FourInRowClient : grpc::ClientBase<FourInRowClient>
    {
      /// <summary>Creates a new client for FourInRow</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FourInRowClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FourInRow that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FourInRowClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FourInRowClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FourInRowClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::GrpcFIRService.ChatMessage> Connect(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Connect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcFIRService.ChatMessage> Connect(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Connect, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty Disconnect(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Disconnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty Disconnect(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Disconnect, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> DisconnectAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisconnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> DisconnectAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Disconnect, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty InsertUser(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty InsertUser(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> InsertUserAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> InsertUserAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertUser, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty InsertGame(global::GrpcFIRService.GameModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty InsertGame(global::GrpcFIRService.GameModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertGame, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> InsertGameAsync(global::GrpcFIRService.GameModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> InsertGameAsync(global::GrpcFIRService.GameModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertGame, null, options, request);
      }
      public virtual global::GrpcFIRService.UserModel GetUserById(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.UserModel GetUserById(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.UserModel> GetUserByIdAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.UserModel> GetUserByIdAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserById, null, options, request);
      }
      public virtual global::GrpcFIRService.UserModel GetUserByUserName(global::GrpcFIRService.NameString request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByUserName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.UserModel GetUserByUserName(global::GrpcFIRService.NameString request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserByUserName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.UserModel> GetUserByUserNameAsync(global::GrpcFIRService.NameString request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByUserNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.UserModel> GetUserByUserNameAsync(global::GrpcFIRService.NameString request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserByUserName, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty UserExists(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UserExists(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty UserExists(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UserExists, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> UserExistsAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UserExistsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> UserExistsAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UserExists, null, options, request);
      }
      public virtual global::GrpcFIRService.Users UpdateUsers(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Users UpdateUsers(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Users> UpdateUsersAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Users> UpdateUsersAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUsers, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty SendMessage(global::GrpcFIRService.ChatMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty SendMessage(global::GrpcFIRService.ChatMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> SendMessageAsync(global::GrpcFIRService.ChatMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> SendMessageAsync(global::GrpcFIRService.ChatMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendMessage, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcFIRService.GameMessage> Peer2peerConnect(global::GrpcFIRService.GameMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Peer2peerConnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GrpcFIRService.GameMessage> Peer2peerConnect(global::GrpcFIRService.GameMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Peer2peerConnect, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty SendGameMessage(global::GrpcFIRService.GameMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendGameMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty SendGameMessage(global::GrpcFIRService.GameMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendGameMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> SendGameMessageAsync(global::GrpcFIRService.GameMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendGameMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> SendGameMessageAsync(global::GrpcFIRService.GameMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendGameMessage, null, options, request);
      }
      public virtual global::GrpcFIRService.ShowUsersList GetAllUsers(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.ShowUsersList GetAllUsers(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowUsersList> GetAllUsersAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowUsersList> GetAllUsersAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllUsers, null, options, request);
      }
      public virtual global::GrpcFIRService.ShowUsersList GetShowedUsers(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.ShowUsersList GetShowedUsers(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShowedUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowUsersList> GetShowedUsersAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowUsersList> GetShowedUsersAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShowedUsers, null, options, request);
      }
      public virtual global::GrpcFIRService.ShowUsersList GetShowedPercentUsers(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedPercentUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.ShowUsersList GetShowedPercentUsers(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShowedPercentUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowUsersList> GetShowedPercentUsersAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedPercentUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowUsersList> GetShowedPercentUsersAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShowedPercentUsers, null, options, request);
      }
      public virtual global::GrpcFIRService.ShowGamesList GetShowedGames(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedGames(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.ShowGamesList GetShowedGames(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShowedGames, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowGamesList> GetShowedGamesAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedGamesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowGamesList> GetShowedGamesAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShowedGames, null, options, request);
      }
      public virtual global::GrpcFIRService.Show2players GetShowedGamesBetween2Users(global::GrpcFIRService.UsersModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedGamesBetween2Users(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Show2players GetShowedGamesBetween2Users(global::GrpcFIRService.UsersModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShowedGamesBetween2Users, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Show2players> GetShowedGamesBetween2UsersAsync(global::GrpcFIRService.UsersModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedGamesBetween2UsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Show2players> GetShowedGamesBetween2UsersAsync(global::GrpcFIRService.UsersModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShowedGamesBetween2Users, null, options, request);
      }
      public virtual global::GrpcFIRService.ShowGamesList GetShowedOngoingGames(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedOngoingGames(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.ShowGamesList GetShowedOngoingGames(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShowedOngoingGames, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowGamesList> GetShowedOngoingGamesAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShowedOngoingGamesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.ShowGamesList> GetShowedOngoingGamesAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShowedOngoingGames, null, options, request);
      }
      public virtual global::GrpcFIRService.SerialNumber GetNextSerialNumber(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNextSerialNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.SerialNumber GetNextSerialNumber(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNextSerialNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.SerialNumber> GetNextSerialNumberAsync(global::GrpcFIRService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNextSerialNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.SerialNumber> GetNextSerialNumberAsync(global::GrpcFIRService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNextSerialNumber, null, options, request);
      }
      public virtual global::GrpcFIRService.boolmessage CheckSerialNumber(global::GrpcFIRService.SerialNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckSerialNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.boolmessage CheckSerialNumber(global::GrpcFIRService.SerialNumber request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckSerialNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.boolmessage> CheckSerialNumberAsync(global::GrpcFIRService.SerialNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckSerialNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.boolmessage> CheckSerialNumberAsync(global::GrpcFIRService.SerialNumber request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckSerialNumber, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty UpdateEndGame(global::GrpcFIRService.GameModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEndGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty UpdateEndGame(global::GrpcFIRService.GameModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEndGame, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> UpdateEndGameAsync(global::GrpcFIRService.GameModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEndGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> UpdateEndGameAsync(global::GrpcFIRService.GameModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEndGame, null, options, request);
      }
      public virtual global::GrpcFIRService.GameModel GetGameBySerialNumber(global::GrpcFIRService.SerialNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGameBySerialNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.GameModel GetGameBySerialNumber(global::GrpcFIRService.SerialNumber request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGameBySerialNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.GameModel> GetGameBySerialNumberAsync(global::GrpcFIRService.SerialNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGameBySerialNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.GameModel> GetGameBySerialNumberAsync(global::GrpcFIRService.SerialNumber request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGameBySerialNumber, null, options, request);
      }
      public virtual global::GrpcFIRService.boolmessage CheckIfAlreadyUpdatedGame(global::GrpcFIRService.SerialNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckIfAlreadyUpdatedGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.boolmessage CheckIfAlreadyUpdatedGame(global::GrpcFIRService.SerialNumber request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckIfAlreadyUpdatedGame, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.boolmessage> CheckIfAlreadyUpdatedGameAsync(global::GrpcFIRService.SerialNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckIfAlreadyUpdatedGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.boolmessage> CheckIfAlreadyUpdatedGameAsync(global::GrpcFIRService.SerialNumber request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckIfAlreadyUpdatedGame, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty UpdateUser(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty UpdateUser(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> UpdateUserAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> UpdateUserAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUser, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty InsertUser2Played(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertUser2Played(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty InsertUser2Played(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertUser2Played, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> InsertUser2PlayedAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertUser2PlayedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> InsertUser2PlayedAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertUser2Played, null, options, request);
      }
      public virtual global::GrpcFIRService.boolmessage CheckUsertInPlayed(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckUsertInPlayed(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.boolmessage CheckUsertInPlayed(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckUsertInPlayed, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.boolmessage> CheckUsertInPlayedAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckUsertInPlayedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.boolmessage> CheckUsertInPlayedAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckUsertInPlayed, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty RemoveUserFPlayed(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserFPlayed(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty RemoveUserFPlayed(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUserFPlayed, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> RemoveUserFPlayedAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserFPlayedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> RemoveUserFPlayedAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUserFPlayed, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty serverRemoveUser(global::GrpcFIRService.Users request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return serverRemoveUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty serverRemoveUser(global::GrpcFIRService.Users request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_serverRemoveUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> serverRemoveUserAsync(global::GrpcFIRService.Users request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return serverRemoveUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> serverRemoveUserAsync(global::GrpcFIRService.Users request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_serverRemoveUser, null, options, request);
      }
      public virtual global::GrpcFIRService.Empty serverAddUser(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return serverAddUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcFIRService.Empty serverAddUser(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_serverAddUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> serverAddUserAsync(global::GrpcFIRService.UserModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return serverAddUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcFIRService.Empty> serverAddUserAsync(global::GrpcFIRService.UserModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_serverAddUser, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FourInRowClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FourInRowClient(configuration);
      }
    }

  }
}
#endregion
